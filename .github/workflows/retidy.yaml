name: Go Mod Tidy

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  GO_VERSION: '1.25'

jobs:
  go-mod-tidy:
    name: Go Mod Tidy for Dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Check if root go.mod was changed
      id: check-root
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -q '^go\.\(mod\|sum\)$'; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Check if gin go.mod was changed
      id: check-gin
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -q '^gin/go\.\(mod\|sum\)$'; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Run go mod tidy in root
      if: steps.check-root.outputs.changed == 'true'
      run: |
        echo "Running go mod tidy in root directory"
        go mod tidy

        # Check if gin directory needs updating due to root changes
        cd gin
        go mod tidy
        cd ..

    - name: Run go mod tidy in gin directory
      if: steps.check-gin.outputs.changed == 'true'
      run: |
        echo "Running go mod tidy in gin directory"
        cd gin
        go mod tidy
        cd ..

        # Also tidy root in case gin changes affect it
        go mod tidy

    - name: Check for changes
      id: verify-changes
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Found changes after go mod tidy:"
          git status --porcelain
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "No changes after go mod tidy"
        fi

    - name: Commit and push changes
      if: steps.verify-changes.outputs.changes == 'true'
      run: |
        git add go.mod go.sum gin/go.mod gin/go.sum
        git commit -m "chore: run go mod tidy after dependency update

        This commit was automatically generated by the dependabot-tidy workflow
        to ensure go.mod and go.sum files are properly synchronized across
        both the root module and gin submodule."

        git push origin HEAD

    - name: Trigger test workflow and comment on PR
      if: steps.verify-changes.outputs.changes == 'true'
      uses: actions/github-script@v8
      with:
        script: |
          // Trigger the test workflow
          const response = await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'test.yaml',
            ref: context.payload.pull_request.head.ref,
            inputs: {
              ref: context.payload.pull_request.head.sha,
              reason: `Re-test after go mod tidy on PR #${context.issue.number}`
            }
          });

          console.log('Triggered test workflow:', response);

          // Add a single comment with all the information
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸ¤– **Automatic go mod tidy completed**\n\nI ran `go mod tidy` in both the root directory and gin submodule to ensure all dependencies are properly synchronized.\n\nChanges made:\n- Updated go.mod and go.sum files as needed\n- Ensured consistency between root and gin module dependencies\n\nâœ… **Test workflow triggered!** Check the [Actions tab](../../actions) for test results.'
          });